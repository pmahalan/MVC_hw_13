<h1>Cupcakes</h1>

<h2>Not Devoured!</h2>

<ul>
  {{#each cakes}}
    {{#unless devoured}}
      {{> cakes/cake-block devour=true}}
    {{/unless}}
  {{/each}}
</ul>

<h2>Devoured!</h2>

<ul>
  {{#each cats}}
    {{#if devoured}}
      {{> cakes/cake-block devour=false}}
    {{/if}}
  {{/each}}
</ul>



{{!-- This is meant to allow the user to add a cupcake. --}}
<h2>Add a Cupcake</h2>
<form class="create-form">

  <div class="form-group">
    <label for="cn">Cupcake Name:</label>
    <input type="text" id="cn" name="name">
  </div>

  <button type="submit">Add</button>
</form>




<script type="text/javascript">

    //$(".delplan").on("click", function(event) {
    // This is shorthand for $(this).attr("data-planid")
      //var id = $(this).data("planid");
        // Send the DELETE request.
    //$.ajax("/api/films/" + id, {
      //type: "DELETE"

    //upon the clicking of the button which has a class 
    // of "delplan", it makes an AJAX request to "/api/films"
    // and deletes that button. 
    // you need to make yours so that
    // upon clicking a button with a class of something like "devourcake", 
    // it makes an API request to where the cakes are stored and changes
    // the status from not devoured to devoured.

    //maybe look at the cats example; 
    // switiching between sleepy and not sleepy is a better analogy for what you're trying to do here.

   // }).then(
     // function() {
       // console.log("deleted id ", id);
        // Reload the page to get the updated list 
        //location.reload();
     // }
   // );
 // });

</script>

